EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
1_sample.com_ -- emu8086 assembler version: 4.08  
 
[ 19/05/2013  --  08:03:32 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       
[   2]        :                                       
[   3]        :                                       org 100h
[   4]        :                                       
[   5]    0100: EB 3F                                 jmp start
[   6]        :                                       
[   7]    0102: 68 65 6C 6C 6F 20 77 6F 72 6C 64 24   enword:    db      "hello world", 24h
                                                    
[   8]    010E: 03                                    base db 3
[   9]        :                                       
[  10]    010F:                                       csren:
[  11]    010F: 53                                    	push bx
[  12]    0110: 51                                    	push cx
[  13]    0111: 50                                    	push ax
[  14]    0112: 52                                    	push dx
[  15]    0113: BB 02 01                              	mov bx, offset [enword]
[  16]    0116:                                       	enloop1:
[  17]    0116: 80 3F 24                              	cmp byte ptr[bx], '$'
[  18]    0119: 75 05                                 		jne en1
[  19]    011B: 5A                                    	pop dx
[  20]    011C: 58                                    	pop ax
[  21]    011D: 59                                    	pop cx
[  22]    011E: 5B                                    	pop bx
[  23]    011F: C3                                    	ret
[  24]        :                                       	
[  25]    0120:                                       	en1:
[  26]    0120: 80 3F 20                              		cmp byte ptr[bx], ' '
[  27]    0123: 74 19                                 			je space1
[  28]    0125: 8A 0E 0E 01                           		mov cl, base
[  29]    0129: 00 0F                                 		add [bx], cl
[  30]    012B: 80 2F 61                              		sub byte ptr[bx], 97
[  31]    012E: 8A 07                                 		mov al, [bx]
[  32]    0130: 32 E4                                 		xor ah, ah
[  33]    0132: B2 1A                                 		mov dl, 26
[  34]    0134: F6 FA                                 		idiv dl
[  35]    0136: 88 27                                 		mov [bx], ah
[  36]    0138: 80 07 61                              		add byte ptr[bx], 97
[  37]    013B: 43                                    		inc bx
[  38]    013C: EB D8                                 		jmp enloop1
[  39]        :                                       		
[  40]    013E:                                       		space1:
[  41]    013E: 43                                    			inc bx
[  42]    013F: EB D5                                 			jmp enloop1
[  43]        :                                       
[  44]    0141: BA 02 01                              start:  mov     dx, enword
[  45]    0144: B4 09                                 mov     ah, 09h
[  46]    0146: CD 21                                 int     21h
[  47]    0148: E8 C4 FF                              call csren
[  48]    014B: BA 02 01                              mov     dx, enword
[  49]    014E: B4 09                                 mov     ah, 09h
[  50]    0150: CD 21                                 int     21h
[  51]    0152: B4 00                                 mov     ah, 0
[  52]    0154: CD 16                                 int     16h
[  53]    0156: C3                                    ret
[  54]        :                                       
 
===================================================================================================
 




===================================================================================================
